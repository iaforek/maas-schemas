/*

undefined
undefined

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';

type Defined =
  | Record<string, unknown>
  | Array<unknown>
  | string
  | boolean
  | number
  | null;
const Defined = t.union([
  t.UnknownRecord,
  t.UnknownArray,
  t.string,
  t.boolean,
  t.number,
  t.null,
]);

export const schemaId = 'http://maasglobal.com/core/modes/MODE_SHARED_E_BICYCLE.json';

// MODE_SHARED_E_BICYCLE
// The default export. More information at the top.
export type MODE_SHARED_E_BICYCLE = t.Branded<
  {
    bike?: {
      id?: string;
      battery?: number;
    } & {
      id: Defined;
    };
  },
  MODE_SHARED_E_BICYCLEBrand
>;
export const MODE_SHARED_E_BICYCLE = t.brand(
  t.partial({
    bike: t.intersection([
      t.partial({
        id: t.string,
        battery: t.number,
      }),
      t.type({
        id: Defined,
      }),
    ]),
  }),
  (
    x,
  ): x is t.Branded<
    {
      bike?: {
        id?: string;
        battery?: number;
      } & {
        id: Defined;
      };
    },
    MODE_SHARED_E_BICYCLEBrand
  > => true,
  'MODE_SHARED_E_BICYCLE',
);
export interface MODE_SHARED_E_BICYCLEBrand {
  readonly MODE_SHARED_E_BICYCLE: unique symbol;
}

export default MODE_SHARED_E_BICYCLE;

// Success
